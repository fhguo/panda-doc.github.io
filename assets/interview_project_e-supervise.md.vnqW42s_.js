import{_ as s,o as i,c as a,R as n,ac as l,ad as t,ae as h}from"./chunks/framework.uQiAom7V.js";const u=JSON.parse('{"title":"行政诉讼E监督","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"interview/project/e-supervise.md","filePath":"interview/project/e-supervise.md","lastUpdated":1715148599000}'),p={name:"interview/project/e-supervise.md"},e=n('<h1 id="行政诉讼e监督" tabindex="-1">行政诉讼E监督 <a class="header-anchor" href="#行政诉讼e监督" aria-label="Permalink to &quot;行政诉讼E监督&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">项目概述</p><ul><li>​本项目是为浙江省天台县人大机构开发的行政诉讼项目，行政诉讼即“民告官”，是为了人民更方便地监督各个行政机关，从而维护自己的合法权益。</li><li>该项目分为PC端和移动端，两端功能基本相同，PC端与移动端最明显的差异点是PC端有驾驶舱，方便各行政机关更直观地查看案件相关数据。</li><li>项目的使用角色有法院、被诉行政机关、人大、司法局、检察院、社会治理中心、信访局、超管等，每个角色看到的页面和使用的功能不同。开发完成会上架浙政钉，方便政府工作人员使用。</li></ul></div><h2 id="一、项目截图" tabindex="-1">一、项目截图 <a class="header-anchor" href="#一、项目截图" aria-label="Permalink to &quot;一、项目截图&quot;">​</a></h2><h3 id="_1-pc-行政机关-工作台" tabindex="-1">1. PC-行政机关-工作台 <a class="header-anchor" href="#_1-pc-行政机关-工作台" aria-label="Permalink to &quot;1. PC-行政机关-工作台&quot;">​</a></h3><p><img src="'+l+'" alt="An image"></p><h3 id="_2-pc-驾驶舱-首屏" tabindex="-1">2. PC-驾驶舱-首屏 <a class="header-anchor" href="#_2-pc-驾驶舱-首屏" aria-label="Permalink to &quot;2. PC-驾驶舱-首屏&quot;">​</a></h3><p><img src="'+t+'" alt="An image"></p><h3 id="_3-h5-法院-首页" tabindex="-1">3. H5-法院-首页 <a class="header-anchor" href="#_3-h5-法院-首页" aria-label="Permalink to &quot;3. H5-法院-首页&quot;">​</a></h3><p><img src="'+h+`" alt="An image"></p><h2 id="二、技术归纳" tabindex="-1">二、技术归纳 <a class="header-anchor" href="#二、技术归纳" aria-label="Permalink to &quot;二、技术归纳&quot;">​</a></h2><p>​ 移动端和PC端前端都是使用的主流的Vue2.0技术，项目路由使用vue-router，网络请求使用axios技术，身份验证使用token ，图标使用iconfont图标库。两端使用的UI组件库不同，PC端使用ElementUI，移动端使用Vant。PC端大屏使用的是百度的echarts库。</p><p>​ 因为项目需要在浙政钉上架，与以往做的项目稍有不同。</p><ul><li>一是该项目没有登录界面，身份验证需要借助浙政钉的用户信息，所以在本地开发的时候需要频繁地向后端人员要指定身份的token，以调用有权限的接口和打开有权限的页面。</li><li>二是需要考虑浙政钉的适配问题，浙政钉平台里面的应用界面并不是全屏的，与本地浏览器开发的尺寸不同，所以需要保证在浙政钉平台的应用页面正常显示。</li><li>三是部分功能需要借助浙政钉的官方API，比如文档的下载功能。</li></ul><h2 id="三、我的工作" tabindex="-1">三、我的工作 <a class="header-anchor" href="#三、我的工作" aria-label="Permalink to &quot;三、我的工作&quot;">​</a></h2><p>主要参与该项目的中后期工作，涉及PC端和移动端，主要工作有以下几点：</p><ul><li>原功能调整及优化</li><li>PC端驾驶舱搭建</li><li>新增信访局角色及信访相关功能开发</li><li>新增案例库模块</li></ul><h2 id="四、重难点" tabindex="-1">四、重难点 <a class="header-anchor" href="#四、重难点" aria-label="Permalink to &quot;四、重难点&quot;">​</a></h2><h4 id="_1-pc端大屏适配" tabindex="-1">1.PC端大屏适配 <a class="header-anchor" href="#_1-pc端大屏适配" aria-label="Permalink to &quot;1.PC端大屏适配&quot;">​</a></h4><ul><li><p>在设计界面时，使用百分比单位来定义元素的宽度和高度，或者使用自适应单位（例如vw和vh）来使元素相对于视口大小进行调整</p></li><li><p>使用采用<strong>font.js+rem</strong>的组合</p><p>在main.js引入一个屏幕适配的font.js文件，动态改变根字体大小。大屏所有像素单位使用rem。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 浏览器发生变化后 自动执行function 调用setFontSize</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onresize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setFontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setFontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取当前的设备宽度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dwidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.documentElement.clientWidth;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 代表的是我们 1920 设计稿中 1rem 的像素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (dwidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1920</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dwidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1920</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据窗口大小计算比率</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1920</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dwidth);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 设置浏览器根字体大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    document.documentElement.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h4 id="_2-大屏列表滚动" tabindex="-1">2.大屏列表滚动 <a class="header-anchor" href="#_2-大屏列表滚动" aria-label="Permalink to &quot;2.大屏列表滚动&quot;">​</a></h4><ul><li><p>vue-seamless-scroll组件的使用(参照文档)</p><p><em>支持上下左右无缝滚动，单步滚动，以及支持水平方向的手动切换功能</em></p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install vue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seamless</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scroll </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save</span></span></code></pre></div><h4 id="_3-移动端1px边框" tabindex="-1">3.移动端1px边框 <a class="header-anchor" href="#_3-移动端1px边框" aria-label="Permalink to &quot;3.移动端1px边框&quot;">​</a></h4><blockquote><p>目前主流的屏幕DPR=2 （iPhone 678）,或者3 （iPhone 8 Plus）。拿2倍屏来说，设备的物理像素要实现1像素，而DPR=2，所以css 像素只能是 0.5。以DPR=2为例，使用scale缩放解决</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">position: relative;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  pointer-events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #ebedf0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_4-使用第三方图标库iconfont" tabindex="-1">4.使用第三方图标库iconfont <a class="header-anchor" href="#_4-使用第三方图标库iconfont" aria-label="Permalink to &quot;4.使用第三方图标库iconfont&quot;">​</a></h4><ul><li>拷贝项目下面生成的fontclass代码(需下载字体包引入项目中)：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//at.alicdn.com/t/font_8d5l8fzk5b87iudi.css</span></span></code></pre></div><ul><li>挑选相应图标并获取类名，应用于页面：</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class=&quot;iconfont </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">icon-xxx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="_5-移动端文件上传类型问题" tabindex="-1">5.移动端文件上传类型问题 <a class="header-anchor" href="#_5-移动端文件上传类型问题" aria-label="Permalink to &quot;5.移动端文件上传类型问题&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">iphone上传图片和视频的时候会压缩文件，导致文件格式变化。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">图片会转化为.jpeg，视频会转化为.mov格式，上传类型需要加上.jpeg和.mov文件类型</span></span></code></pre></div><h4 id="_6-移动端的适配方案" tabindex="-1">6.移动端的适配方案 <a class="header-anchor" href="#_6-移动端的适配方案" aria-label="Permalink to &quot;6.移动端的适配方案&quot;">​</a></h4><p>一、使用 <a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noreferrer">lib-flexible</a> 动态设置 REM 基准值（html 标签的字体大小）</p><p>1、安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yarn add amfe-flexible</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> amfe-flexible</span></span></code></pre></div><p>2、然后在 <code>main.js</code> 中加载执行该模块</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;amfe-flexible&#39;</span></span></code></pre></div><p>最后测试：在浏览器中切换不同的手机设备尺寸，观察 html 标签 <code>font-size</code> 的变化。</p><p>二、使用 <a href="https://github.com/cuth/postcss-pxtorem" target="_blank" rel="noreferrer">postcss-pxtorem</a> 将 <code>px</code> 转为 <code>rem</code></p><p>1、安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yarn add -D postcss-pxtorem</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -D 是 --save-dev 的简写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postcss-pxtorem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postcss-pxtorem@5.1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">指定版本安装</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span></span></code></pre></div><p>2、然后在<strong>项目根目录</strong>中创建 <code>.postcssrc.js</code> 文件</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;autoprefixer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      browsers: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Android &gt;= 4.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;iOS &gt;= 8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;postcss-pxtorem&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      rootValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">37.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设设计稿宽度为375px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      propList: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  *代表作用全部元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>3、配置完毕，重新启动服务</p>`,45),k=[e];function r(d,E,o,c,g,y){return i(),a("div",null,k)}const C=s(p,[["render",r]]);export{u as __pageData,C as default};
